#!/bin/bash

EXIT_FAILURE=1
EXIT_SUCCESS=0

# Farben f√ºr sch√∂neren Output
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # no color

set_limits() {
    echo
    echo "üéõÔ∏è  Setze Limits f√ºr das Skript..."
    ulimit -t 2  # CPU-Zeitlimit = 2 Sekunden
    ulimit -s 64 # stack Limit = 64 KB
    ulimit -f 1  # Dateigr√∂√üe = 1 KB
    ulimit -a | grep -E 'cpu|stack|file' # Zeige die gesetzten Limits an
    echo
    echo -e "${GREEN}‚úÖ Limits gesetzt. ${NC}"
}

if [ $# -eq 0 ]; then
    echo -e "${RED}‚ùå Fehler:Bitte gib mindestens einen Parameter an: 'cpu', 'stack' oder 'file'. ${NC}"
    exit $EXIT_FAILURE
fi

# √úberpr√ºfen, ob das Programm existiert
if [[ ! -f "limits_try_out" ]]; then
    echo -e "${RED}‚ùå Fehler: Das Programm 'limits_try_out' existiert nicht im aktuellen Verzeichnis. ${NC}"

    if [[ -f "limits_try_out.c" ]]; then
        echo -e "${RED}‚ùóÔ∏è Hinweis: Stelle sicher, dass du das Programm kompiliert hast. F√ºhre 'gcc limits_try_out.c -o limits_try_out' aus. ${NC}"
    else
        echo -e "${RED}‚ùóÔ∏è Hinweis: Die Quelldatei 'limits_try_out.c' fehlt. Bitte stelle sicher, dass sie im aktuellen Verzeichnis vorhanden ist. ${NC}"
    fi
    
    exit $EXIT_FAILURE
fi

for TEST in "$@"; do
    echo "__________________________________________________________________"
    echo
    echo "‚ñ∂Ô∏è  Starte Test f√ºr: $TEST"
    set_limits

    # √úberpr√ºfen, ob das Programm ausf√ºhrbar ist
    if [[ ! -x "limits_try_out" ]]; then
        echo -e "${RED}‚ùå Fehler: Das Programm 'limits_try_out' ist nicht ausf√ºhrbar. ${NC}"
        exit $EXIT_FAILURE
    fi

    ./limits_try_out "$TEST"
    STATUS=$?

    echo
    echo "üì§ R√ºckgabewert von limits_try_out: $STATUS"
    echo
    echo -e "${GREEN}‚úÖ Test f√ºr '$TEST' abgeschlossen. ${NC}"
    echo "__________________________________________________________________"
    echo
done
echo -e "${GREEN}‚úÖ‚úÖ Alle Tests abgeschlossen. ${NC}"
exit $EXIT_SUCCESS